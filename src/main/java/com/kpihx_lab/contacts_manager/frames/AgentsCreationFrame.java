/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.kpihx_lab.contacts_manager.frames;

import com.kpihx_lab.contacts_manager.core.*;
import java.util.Date;

/**
 *
 * @author kpihx
 */
public class AgentsCreationFrame extends javax.swing.JFrame {
    private ContactsCreationFrame contactsCreationFrame;
    private Repertoire repertoire;
    private Date birth;
    private String code, name, address, email, tel;
    private String contactType;
    
    private double salary;
    private String statut, category, occupation;
    private int salaryIndex;
    /**
     * Creates new form AgentsCreationFrame
     */
    public AgentsCreationFrame(ContactsCreationFrame contactsCreationFrame, String code, String name, Date birth, String address, String email, String tel) {
        this.contactsCreationFrame = contactsCreationFrame;
        this.repertoire = contactsCreationFrame.getRepertoire();
        this.code = code;
        this.name = name;
        this.birth = birth;
        this.address = address;
        this.email = email;
        this.tel = tel;
        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        returnButton = new javax.swing.JButton();
        createButton = new javax.swing.JButton();
        salaryLabel = new javax.swing.JLabel();
        statutLabel = new javax.swing.JLabel();
        categoryLabel = new javax.swing.JLabel();
        salaryIndexLabel = new javax.swing.JLabel();
        occupationLabel = new javax.swing.JLabel();
        salaryText = new javax.swing.JTextField();
        categoryText = new javax.swing.JTextField();
        salaryIndexText = new javax.swing.JTextField();
        occupationText = new javax.swing.JTextField();
        statutComboBox = new javax.swing.JComboBox<>(Agent.getStatuts());
        menuButton = new javax.swing.JButton();
        notificationLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ajout Agent");

        returnButton.setText("Revenir");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        createButton.setText("Creer");
        createButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createButtonActionPerformed(evt);
            }
        });

        salaryLabel.setText("Salaire");

        statutLabel.setText("Statut");

        categoryLabel.setText("Cat√©gorie");

        salaryIndexLabel.setText("Indice de salaire");

        occupationLabel.setText("Occupation");

        salaryText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                salaryTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                salaryTextFocusLost(evt);
            }
        });
        salaryText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salaryTextActionPerformed(evt);
            }
        });

        categoryText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryTextActionPerformed(evt);
            }
        });

        salaryIndexText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                salaryIndexTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                salaryIndexTextFocusLost(evt);
            }
        });
        salaryIndexText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salaryIndexTextActionPerformed(evt);
            }
        });

        occupationText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                occupationTextActionPerformed(evt);
            }
        });

        statutComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statutComboBoxActionPerformed(evt);
            }
        });

        menuButton.setText("Menu Principal");
        menuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuButtonActionPerformed(evt);
            }
        });

        notificationLabel.setText("Notifications:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(menuButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addComponent(returnButton)
                        .addGap(29, 29, 29)
                        .addComponent(createButton, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(occupationLabel)
                            .addComponent(categoryLabel)
                            .addComponent(statutLabel)
                            .addComponent(salaryLabel)
                            .addComponent(salaryIndexLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(salaryText)
                            .addComponent(statutComboBox, 0, 179, Short.MAX_VALUE)
                            .addComponent(categoryText)
                            .addComponent(salaryIndexText)
                            .addComponent(occupationText))))
                .addGap(27, 27, 27))
            .addComponent(notificationLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salaryLabel)
                    .addComponent(salaryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statutComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(statutLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(categoryLabel)
                    .addComponent(categoryText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(salaryIndexLabel)
                    .addComponent(salaryIndexText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(occupationText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(occupationLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(menuButton)
                    .addComponent(returnButton)
                    .addComponent(createButton))
                .addGap(44, 44, 44)
                .addComponent(notificationLabel))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void salaryTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salaryTextActionPerformed
        try {
            salary = Double.valueOf(salaryText.getText());
            if (salary <= 0) { 
                throw new IllegalArgumentException("Le salaire doit √™tre strictement positif!");
            }
        } catch (NumberFormatException ex) {
            throw new IllegalArgumentException("Veuillez entrer un nombre r√©el positif, comme salaire!");
        }
    }//GEN-LAST:event_salaryTextActionPerformed

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createButtonActionPerformed
        try {
            salaryTextActionPerformed(evt);
            statutComboBoxActionPerformed(evt);
            categoryTextActionPerformed(evt);
            salaryIndexTextActionPerformed(evt);
            occupationTextActionPerformed(evt);
        } catch (IllegalArgumentException ex) {
            notificationLabel.setText("Erreur: " + ex.getMessage());
            return;
        }
        
        if (repertoire.rechercherContact(code) != null) {
            notificationLabel.setText("Erreur: " + "Le code entr√© existe d√©j√†!");
            return;
        }
        
        repertoire.ajouterContact(new Agent(code, name, birth, address, email, tel, salary, statut, category, salaryIndex, occupation));
        notificationLabel.setText("Succ√®s: Le contact a bien √©t√© ajout√©!");
    }//GEN-LAST:event_createButtonActionPerformed

    private void statutComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statutComboBoxActionPerformed
        statut = (String) statutComboBox.getSelectedItem();
    }//GEN-LAST:event_statutComboBoxActionPerformed

    private void categoryTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryTextActionPerformed
        category = categoryText.getText();
    }//GEN-LAST:event_categoryTextActionPerformed

    private void salaryIndexTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salaryIndexTextActionPerformed
        try {
            salaryIndex = Integer.valueOf(salaryIndexText.getText());
            if (salaryIndex < 0) {
                throw new IllegalArgumentException("L'indice de salaire doit strictement positif!");
            }
        } catch (NumberFormatException ex) {
            throw new IllegalArgumentException("L'indice de salaire doit √™tre un entier strictement positif");
        }
    }//GEN-LAST:event_salaryIndexTextActionPerformed

    private void occupationTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_occupationTextActionPerformed
        occupation = occupationText.getText();
    }//GEN-LAST:event_occupationTextActionPerformed

    private void salaryTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_salaryTextFocusLost
        try {
            salary = Double.valueOf(salaryText.getText());
            if (salary <= 0) { 
                notificationLabel.setText("Erreur: Le salaire doit √™tre strictement positif!");
            }
        } catch (NumberFormatException ex) {
            notificationLabel.setText("Erreur: Veuillez entrer un nombre r√©el positif, comme salaire!");
        }
    }//GEN-LAST:event_salaryTextFocusLost

    private void salaryIndexTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_salaryIndexTextFocusLost
        try {
            salaryIndex = Integer.valueOf(salaryIndexText.getText());
            if (salaryIndex < 0) {
                notificationLabel.setText("Erreur: L'indice de salaire doit strictement positif!");
            }
        } catch (NumberFormatException ex) {
            notificationLabel.setText("Erreur: L'indice de salaire doit √™tre un entier strictement positif");
        }
    }//GEN-LAST:event_salaryIndexTextFocusLost

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        contactsCreationFrame.setVisible(true);
        dispose();
    }//GEN-LAST:event_returnButtonActionPerformed

    private void menuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuButtonActionPerformed
        contactsCreationFrame.getMainFrmApplication().setVisible(true);
        dispose();
    }//GEN-LAST:event_menuButtonActionPerformed

    private void salaryTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_salaryTextFocusGained
        notificationLabel.setText("Notifation:");
    }//GEN-LAST:event_salaryTextFocusGained

    private void salaryIndexTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_salaryIndexTextFocusGained
        notificationLabel.setText("Notifation:");
    }//GEN-LAST:event_salaryIndexTextFocusGained

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AgentsCreationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AgentsCreationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AgentsCreationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AgentsCreationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AgentsCreationFrame().setVisible(true);
            }
        });
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JTextField categoryText;
    private javax.swing.JButton createButton;
    private javax.swing.JButton menuButton;
    private javax.swing.JLabel notificationLabel;
    private javax.swing.JLabel occupationLabel;
    private javax.swing.JTextField occupationText;
    private javax.swing.JButton returnButton;
    private javax.swing.JLabel salaryIndexLabel;
    private javax.swing.JTextField salaryIndexText;
    private javax.swing.JLabel salaryLabel;
    private javax.swing.JTextField salaryText;
    private javax.swing.JComboBox<String> statutComboBox;
    private javax.swing.JLabel statutLabel;
    // End of variables declaration//GEN-END:variables
}
